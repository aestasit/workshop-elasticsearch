filter { 
  if ([type] == "client2_weblogic") {
    multiline {
      pattern      => "^####"
      negate       => true
      what         => previous
    }
    mutate {
      gsub         => [ "message", "\n", " "]
    }
    grok {
      match => {            
        "message"  => [ 
          "####<(?<timestamp>\d{2}-\w{3}-\d{4} \d{2}:\d{2}:\d{2}) o'clock \w+> <%{DATA:severity}> <%{DATA:subsystem}> <%{DATA:machine}> <%{DATA:server}> <%{DATA:thread}> <%{DATA:user}> <%{DATA:diagnostic}> <%{DATA:transaction}> <%{DATA:raw_time}> <%{DATA:message_id}> <%{GREEDYDATA:message_text}" 
        ] 
      } 
      keep_empty_captures => true
    }
    date {
      match        => [ 
        "timestamp", 
        "dd-MMM-yyyy HH:mm:ss"
      ]
      timezone     => 'UTC'
    }
  } 
  if ([type] == "client2_access") {
    if ([message] =~ /^#/) {
      drop { }
    }
    grok {
      match        => { 
        "message" => '(?<timestamp>\d{4}-\d{2}-\d{2}\t\d{2}:\d{2}:\d{2})	(?<http_method>[^\t]+?)	(?<http_session_id>[^\t]+?)	(?<http_level>[^\t]+?)	(?<http_path>[^\t]+?)	(?<http_status>[^\t]+?)	%{GREEDYDATA:http_response_size}' 
      }
    }
    mutate {
      convert      => [ "http_response_size", "integer" ]
    }                                                
    mutate {
      gsub         => [ "timestamp", "\t", " "]
    }
    date {
      match        => [ 
        "timestamp" , 
        "yyyy-MM-dd HH:mm:ss" 
      ]
      timezone     => 'UTC'
    }
  }
  if ([type] == "client2_diagnostic") {

  }
  if ([type] == "client2_output") {

  }
}
