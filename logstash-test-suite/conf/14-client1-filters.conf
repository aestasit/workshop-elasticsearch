filter { 
  if [type] == "client1_weblogic" {
    multiline {
      pattern      => "^####"
      negate       => true
      what         => previous
    }
    mutate {
      gsub         => [ "message", "\n", " "]
    }
    grok {
      match => {
        "message"  => [ 
          '####<(?<timestamp>\w{3}\s+\d{1,2}, \d{4} \d{1,2}:\d{2}:\d{2} \w{2}) \w+> <%{DATA:severity}> <%{DATA:subsystem}> <%{DATA:machine}> <%{DATA:server}> <%{DATA:thread}> <%{DATA:user}> <%{DATA:diagnostic}> <%{DATA:transaction}> <%{DATA:raw_time}> <%{DATA:message_id}> <%{GREEDYDATA:message_text}' 
        ] 
      } 
      keep_empty_captures => true
    }
    date {
      match        => [ 
        "timestamp", 
        "MMM dd, yyyy hh:mm:ss a", 
        "MMM dd, yyyy h:mm:ss a",
        "MMM  d, yyyy hh:mm:ss a", 
        "MMM  d, yyyy h:mm:ss a" 
      ]
      timezone     => 'UTC'
    }
  } 
  if [type] == "client1_access" {
    grok {
      match        => { "message" => '%{DATA:http_client_ip} %{DATA:http_level} %{DATA:http_user} \[%{DATA:timestamp} %{DATA:timezone}\] "%{DATA:http_method} %{DATA:http_path} %{DATA:http_protocol}" %{DATA:http_status} %{GREEDYDATA:http_response_size}' }
    }
    mutate {
      convert      => [ "http_response_size", "integer" ]
    }                                                
    date {
      match        => [ 
        "timestamp" , 
        "dd/MMM/yyyy:HH:mm:ss" 
      ]
      timezone     => 'UTC'
    }
  }
}
